name: CD
on:
  push:
    branches:
      - main
jobs:
  checking-deployable:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.checking-deployable-github-action.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
      - name: Check deployable a GitHub Action
        id: checking-deployable-github-action
        run: |
          package_version=v$(node -e "console.log(require('./package.json').version)")
          new_tag=$(if [ ! $(git tag | grep $package_version) ]; then echo $package_version; fi)
          echo ::set-output name=new_tag::$new_tag
  deploying-action:
    runs-on: ubuntu-latest
    needs: checking-deployable
    if: ${{ needs.checking-deployable.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
      - run: npm install
      - run: npm run build
      - run: npm run package
      - name: Update to the new version in the README.md
        run: sed -ri "s/v[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}/${{ needs.checking-deployable.outputs.new_tag }}/g" README.md
      - name: Commit a new pushing-hours-restriction version
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Deploy the pushing-hours-restriction@${{ needs.checking-deployable.outputs.new_tag }} action" -a
      - uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  creating-release_note:
    runs-on: ubuntu-latest
    needs: [checking-deployable, deploying-action]
    if: ${{ needs.checking-deployable.outputs.new_tag }}
    outputs:
      upload_url: ${{ steps.release-drafter.outputs.upload_url }}
    steps:
      - uses: release-drafter/release-drafter@v5
        id: release-drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.checking-deployable.outputs.new_tag }}
          tag: ${{ needs.checking-deployable.outputs.new_tag }}
          publish: true
